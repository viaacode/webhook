<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:context="http://www.springframework.org/schema/context" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="10005" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="API_GATEWAY" host="${api.host}" port="${api.port}" basePath="/" responseTimeout="30000" doc:name="HTTP Request Configuration"/>
    <context:property-placeholder location="${mule.env}.properties"/>
<flow name="slack_webhook">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/webhook" allowedMethods="GET, POST" doc:name="/webhook"/>
        <logger message="Received request from Slack: #[payload]" level="INFO" doc:name="Received request from Slack"/>
        <set-variable variableName="token" value="#[payload['token']!=null ? payload['token'] : '']" doc:name="Set token"/>
        <set-variable variableName="token_slack" value="${slack.token}" doc:name="Set token_slack"/>
        <choice doc:name="Verify request came from Slack">
            <when expression="#[flowVars.token!=flowVars.token_slack]">
                <dw:transform-message doc:name="Error: not slack">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"text": "You're not Slack. Not allowed."
}]]></dw:set-payload>
                </dw:transform-message>
                <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"text": "Token not valid.",
	"code": "412"
}]]></dw:set-payload>
            </dw:transform-message>
            <set-property propertyName="http.status" value="#[412]" doc:name="Set http status 412 (Niet voldaan aan vooraf gestelde voorwaarde)"/>
            </when>
            <otherwise>
                <set-variable variableName="command" value="#[payload['command']]" doc:name="Set command"/>
                <set-variable variableName="text" value="#[payload['text']]" doc:name="Set text"/>
                <set-variable variableName="response_url" value="#[payload['response_url']]" doc:name="Set response_url (in case longer than 3 seconds to generate response)"/>
                <choice doc:name="/avo , /mam or /ams ?">
                    <when expression="#[flowVars.command.equals('/ams')]">
                        <flow-ref name="slackAMS" doc:name="slackAMS"/>
                    </when>
                    <when expression="#[flowVars.command.equals('/mam')]">
                        <flow-ref name="slackMAM" doc:name="slackMAM"/>
                    </when>
                    <otherwise>
                        <flow-ref name="slackAvO" doc:name="slackAvO"/>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
    </flow>
    <sub-flow name="slackAvO">
        <choice doc:name="What's the text?">
            <when expression="#[flowVars.text=='registraties']">
                <logger message="registraties" level="INFO" doc:name="registraties"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='plays']">
                <logger message="plays" level="INFO" doc:name="plays"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='collecties']">
                <logger message="collecties" level="INFO" doc:name="collecties"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='trefwoorden']">
                <logger message="trefwoorden" level="INFO" doc:name="trefwoorden"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='users']">
                <logger message="Text: #[flowVars.text]" level="INFO" doc:name="users"/>
                <http:request config-ref="API_GATEWAY" path="/api/avo/users/count" method="GET" doc:name="Request /api/avo/users/count"/>
                <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
                <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
                <set-variable variableName="amount_users" value="#[payload.get('aantal_users')]" doc:name="Set amount_users"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Aantal users: " ++ flowVars.amount_users
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Unknown..."
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="slackMAM">
        <dw:transform-message doc:name="Build response">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Coming soon!"
}]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>
    <sub-flow name="slackAMS">
        <dw:transform-message doc:name="Build response">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Coming soon!"
}]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>
</mule>
