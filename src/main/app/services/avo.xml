<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<sub-flow name="avo_routing">
        <choice doc:name="What's the text?">
            <when expression="#[flowVars.text=='registraties']">
                <logger message="registraties" level="INFO" doc:name="registraties"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='plays']">
                <logger message="plays" level="INFO" doc:name="plays"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='collecties']">
                <logger message="collecties" level="INFO" doc:name="collecties"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='trefwoorden']">
                <logger message="trefwoorden" level="INFO" doc:name="trefwoorden"/>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "Let the fun begin."
}]]></dw:set-payload>
                </dw:transform-message>
            </when>
            <when expression="#[flowVars.text=='users']">
                <logger message="Text: #[flowVars.text]" level="INFO" doc:name="users"/>
                <choice doc:name="Is this user authorized to call this function? (See notes)" doc:description="U02HS2XND       Leen De Bruyn U02HE0C8D       Bart Debunne U0ND8MVMK       Brecht Van de Vyvere U2FS6MK27       Dieter Van Hoof U02HE1QSZ       Nico  Verplancke U02J6K91Z       Karen vander Plaetse U4TDQ4WM9       Claire Denoyette
U02HF1K3Q	Matthias Priem">
                    <when expression="#[flowVars.user_id.equals(&quot;U02HS2XND&quot;) || flowVars.user_id.equals(&quot;U02HE0C8D&quot;) || flowVars.user_id.equals(&quot;U0ND8MVMK&quot;) || flowVars.user_id.equals(&quot;U02J6K91Z&quot;) || flowVars.user_id.equals(&quot;U2FS6MK27&quot;) || flowVars.user_id.equals(&quot;U02HE1QSZ&quot;) || flowVars.user_id.equals(&quot;U4TDQ4WM9&quot;) || flowVars.user_id.equals(&quot;U02HF1K3Q&quot;)]">
                        <async doc:name="Async">
                            <http:request config-ref="API_GATEWAY" path="/api/users/count/active" method="GET" doc:name="Request /api/users/count"/>
                            <dw:transform-message doc:name="Transform Message">
                                <dw:input-payload doc:sample="sample_data/json.json"/>
                                <dw:set-variable variableName="message"><![CDATA[%dw 1.0
%output application/java
---
('*Users in AvO: *\n' ++ (payload.data mapObject (
		'pair': {
			'key': $$,
			'value': $
		}
	) map ('>*' ++ capitalize $.key ++ '*: ' ++ $.value) joinBy "\n"))]]></dw:set-variable>
                            </dw:transform-message>
                            <http:request config-ref="SlackAPI" path="/chat.postMessage" method="POST" doc:name="Post to slack">
                                <http:request-builder>
                                    <http:query-param paramName="token" value="${slack.postToken}"/>
                                    <http:query-param paramName="as_user" value="false"/>
                                    <http:query-param paramName="username" value="AvoBot"/>
                                    <http:query-param paramName="channel" value="#[flowVars.user_id]"/>
                                    <http:query-param paramName="text" value="#[flowVars.message]"/>
                                    <http:query-param paramName="mrkdwn" value="true"/>
                                    <http:header headerName="Content-Type" value="application/json"/>
                                </http:request-builder>
                            </http:request>
                        </async>
                        <set-payload value="#[&quot;&quot;]" doc:name="Set Payload"/>
                    </when>
                    <otherwise>
                        <logger message="User #[flowVars.user_id] has no access to the AvO users command." level="WARN" doc:name="Logger"/>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "ephemeral",
	"text": "U hebt geen toegang tot deze functie. Contacteer het dev team."
}]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <when expression="#[flowVars.text=='items']">
                <logger message="items" level="INFO" doc:name="items"/>
            </when>
            <when expression="#[flowVars.text == &quot;help&quot; || flowVars.text == &quot;what&quot; || flowVars.text == &quot;wat&quot; || flowVars.text == &quot;?&quot;]">
                <logger message="help" level="INFO" doc:name="help"/>
                <flow-ref name="avo_help" doc:name="avo_help"/>
            </when>
            <otherwise>
                <flow-ref name="avo_help" doc:name="avo_help"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="avo_help">
        <logger message="Requested 'help'" level="INFO" doc:name="help"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"response_type": "in_channel",
	"text": "*Available commands:*\n
>*help | ? | what | wat*: \n
>users"
}]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>

</mule>
